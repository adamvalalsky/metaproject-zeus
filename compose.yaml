version: "3.8"

volumes:
  pg-data:

services:
  nest-js-api:
    build:
      context: .
      dockerfile: api/docker/nest-js/Dockerfile
      target: dev
      args:
        BASE_IMAGE: ${BASE_IMAGE_NODE}
    environment:
      - APPLICATION_MODE=development
      - POSTGRES_HOST
      - POSTGRES_PORT
      - POSTGRES_USER
      - POSTGRES_PASSWORD
      - POSTGRES_DATABASE
      - CORS_ALLOW_ORIGIN
    expose:
      - 3000
    volumes:
      - ./api/src:/app/api/src
      - ./api/config:/app/api/config
      - ./api/package.json:/app/api/package.json
      - ./api/package-lock.json:/app/api/package-lock.json
    depends_on:
      - postgres
    networks:
      common:
        aliases:
          - nestjs.resource-manager

  postgres:
    image: ${BASE_IMAGE_POSTGRES}
    ports:
      - ${POSTGRES_PORT}
    environment:
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
      POSTGRES_USER: ${POSTGRES_USER}
      POSTGRES_DB: ${POSTGRES_DATABASE}
      PGDATA: /pg-data
    volumes:
      - pg-data:/pg-data
    networks:
      common:
        aliases:
          - postgres.resource-manager
          - postgres

  proxy:
    build:
      context: ./proxy
      args:
        BASE_IMAGE: ${BASE_IMAGE_NGINX}
    environment:
      - API_PROXY_PASS="http://nest-js-api:3000"
      - EXTERNAL_API_PORT_HTTP=${EXTERNAL_API_PORT_HTTP}
    depends_on:
      - nest-js-api
    ports:
      - target: 3000
        published: ${EXTERNAL_API_PORT_HTTP}
    networks:
      common:
        aliases:
          - api.resource-manager.lab

networks:
  common:
    driver: bridge
